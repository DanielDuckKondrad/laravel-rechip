name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Проверка кода
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установка Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Шаг 3: Билд Docker-образа
      - name: Build Docker image
        run: |
          docker build -t api-rechip-tuning:latest .
      
      # Шаг 4: Сохранение Docker-образа в tar-архив
      - name: Save Docker image to tar
        run: |
          docker save api-rechip-tuning:latest -o api-rechip-tuning.tar

      # Шаг 5: Передача tar-архива на сервер
      - name: Upload Docker image to server
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "api-rechip-tuning.tar"
          target: "/var/www/api.rechip-tuning.ru/api-rechip-tuning.tar"

      # Шаг 6: Выполнение команд на сервере
      - name: Deploy Docker image on server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/api.rechip-tuning.ru

            # Загрузка Docker-образа
            docker load -i api-rechip-tuning.tar

            # Обновление docker-compose.yml (если требуется)
            # rsync или другие команды для обновления конфигурации

            # Перезапуск контейнеров
            docker-compose down
            docker-compose up -d --no-deps --build

            # Очистка tar-архива после загрузки
            rm -f api-rechip-tuning.tar

            # Самоочистка Docker ресурсов
            docker system prune -af
